<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:prism="http://prismlibrary.com/">

    <!--#region ボタン色設定-->

    <!-- Buttonの文字の色 -->
    <SolidColorBrush x:Key="ButtonNormalTextBrush" Color="Black"/>
    <!-- Buttonの枠線の色 -->
    <SolidColorBrush x:Key="ButtonNormalBorderBrush" Color="Black"/>
    <!-- Buttonの背景色 -->
    <SolidColorBrush x:Key="ButtonBackground" Color="#FFE6E6E6" />
    <!-- Buttonのマウスオーバー時の背景色 -->
    <SolidColorBrush x:Key="ButtonHotBackground" Color="White"/>
    <!-- 角丸ボタンのマウスオーバー時の背景色 -->
    <SolidColorBrush x:Key="ButtonHotRadiusBackground" Color="#FFB0B0B0"/>
    <!-- Buttonのマウスオーバー時の枠線の色 -->
    <SolidColorBrush x:Key="ButtonHotBorderBrush" Color="WhiteSmoke"/>
    <!-- 角丸ボタンのマウスオーバー時の枠線の色 -->
    <SolidColorBrush x:Key="ButtonHotBorderRadiusBrush" Color="Black"/>
    <!-- Buttonのマウスクリック時の背景色 -->
    <SolidColorBrush x:Key="ButtonClickBackground" Color="WhiteSmoke"/>
    <!-- 角丸ボタンのマウスクリック時の背景色 -->
    <SolidColorBrush x:Key="ButtonClickRadiusBackground" Color="#FF6E6E6E"/>
    <!-- Buttonのマウスクリック時の文字色 -->
    <SolidColorBrush x:Key="ButtonClickTextBrush" Color="White"/>
    <!-- Button選択時の背景色 -->
    <SolidColorBrush x:Key="ButtonSelectedBackground" Color="#FFCDCABB"/>
    <!-- Button無効化時の色 -->
    <SolidColorBrush x:Key="ButtonDisabledBackground" Color="#FFEAE4E4"/>
    <!-- Button無効化時の枠線の色 -->
    <SolidColorBrush x:Key="ButtonDisabledBorderBrush" Color="#FFB2B2B2"/>
    <!-- Button無効化時の文字の色 -->
    <SolidColorBrush x:Key="ButtonDisabledTextBrush" Color="#FFB2B2B2"/>
    <!-- TextBlock無効化時の文字の色 -->
    <SolidColorBrush x:Key="TextBlockDisabledBrush" Color="DarkGray"/>

    <!--#endregion ボタン色設定 -->
    
    <!-- システム全体共通のスタイルを指定する -->
    <Style x:Key="BaseStyle">
        <Setter Property="Control.Background" Value="Black"/>
        <Setter Property="Control.Foreground" Value="White"/>
        <Setter Property="Control.FontSize" Value="{StaticResource BaseFontSize}" />
        <Setter Property="Control.FontFamily" Value="{StaticResource BaseFontFamily}"/>
    </Style>

    <!--コンボボックススタイル-->
    <Style x:Key="BaseComboStyle" TargetType="{x:Type ComboBox}" BasedOn="{StaticResource BaseStyle}">
        <Setter Property="Height" Value="23"/>
        <Setter Property="Control.Foreground" Value="Black"/>
        <Setter Property="Control.FontSize" Value="{StaticResource BaseFontSize}" />
        <Setter Property="Control.FontFamily" Value="{StaticResource BaseFontFamily}"/>
        <Style.Triggers>
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="Foreground" Value="{StaticResource TextBlockDisabledBrush}"/>
            </Trigger>
        </Style.Triggers>
    </Style>

    <!--テキストボックススタイル-->
    <Style x:Key="BaseTextBoxStyle" TargetType="{x:Type TextBox}" BasedOn="{StaticResource BaseStyle}">
        <Setter Property="Height" Value="20"/>
        <Setter Property="Control.Background" Value="White"/>
        <Setter Property="Control.Foreground" Value="Black"/>
    </Style>

    <!--テキストブロックスタイル--><!--
    <Style x:Key="BaseTextBlockStyle" TargetType="TextBlock">
        <Style.Triggers>
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="Foreground"
                            Value="{StaticResource TextBlockDisabledBrush}"/>
            </Trigger>
        </Style.Triggers>
    </Style>-->

    <!-- ボタンのスタイルを設定 -->
    <Style x:Key="BaseButtonStyle" TargetType="{x:Type Button}">
        <!-- プロパティの値を設定 -->
        <Setter Property="Foreground" Value="{StaticResource ButtonNormalTextBrush}"/>
        <Setter Property="BorderBrush" Value="{StaticResource ButtonNormalBorderBrush}"/>
        <Setter Property="Background" Value="{StaticResource ButtonBackground}"/>
        <Setter Property="FontSize" Value="{StaticResource BaseFontSize}" />
        <Setter Property="FontFamily" Value="{StaticResource BaseFontFamily}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Grid SnapsToDevicePixels="true">
                        <Border x:Name="Bd" 
                                BorderBrush="{TemplateBinding BorderBrush}" 
                                BorderThickness="1,1,1,1" 
                                Background="{TemplateBinding Background}" 
                                Padding="{TemplateBinding Padding}"
                                CornerRadius="0">
                            <ContentPresenter x:Name="Content" 
                                              HorizontalAlignment="Center" 
                                              VerticalAlignment="Center"/>
                        </Border>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <!-- マウスオーバー時の色設定 -->
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter Property="Background"  Value="{StaticResource ButtonHotBackground}"/>
                            <Setter Property="BorderBrush"  Value="{StaticResource ButtonHotBorderBrush}"/>
                        </Trigger>
                        <!-- マウスクリック時の設定-->
                        <Trigger Property="IsPressed" Value="True">
                            <Setter Property="Background" Value="{StaticResource ButtonClickBackground}"/>
                        </Trigger>
                        <!-- 無効化時の色設定 -->
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Background" Value="{StaticResource ButtonDisabledBackground}"/>
                            <Setter Property="BorderBrush"  Value="{StaticResource ButtonDisabledBorderBrush}"/>
                            <Setter Property="Foreground" Value="{StaticResource ButtonDisabledTextBrush}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style >

    <!--角丸ボタン-->
    <Style x:Key="RadiusButton" TargetType="Button" BasedOn="{StaticResource BaseButtonStyle}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Grid SnapsToDevicePixels="true">
                        <Border x:Name="Bd" 
                                BorderBrush="{TemplateBinding BorderBrush}" 
                                BorderThickness="1,1,1,1" 
                                Background="{TemplateBinding Background}" 
                                Padding="{TemplateBinding Padding}"
                                CornerRadius="10">
                            <ContentPresenter x:Name="Content" 
                                              HorizontalAlignment="Center" 
                                              VerticalAlignment="Center"/>
                        </Border>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <!-- マウスオーバー時の色設定 -->
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter Property="Background"  Value="{StaticResource ButtonHotRadiusBackground}"/>
                            <Setter Property="BorderBrush"  Value="{StaticResource ButtonHotBorderRadiusBrush}"/>
                        </Trigger>
                        <!-- マウスクリック時の設定-->
                        <Trigger Property="IsPressed" Value="True">
                            <Setter Property="Background" Value="{StaticResource ButtonClickRadiusBackground}"/>
                            <Setter Property="BorderBrush" Value="{StaticResource ButtonNormalBorderBrush}"/>
                            <Setter Property="Foreground" Value="{StaticResource ButtonClickTextBrush}"/>
                        </Trigger>
                        <!-- 無効化時の色設定 -->
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Background" Value="{StaticResource ButtonDisabledBackground}"/>
                            <Setter Property="BorderBrush"  Value="{StaticResource ButtonDisabledBorderBrush}"/>
                            <Setter Property="Foreground" Value="{StaticResource ButtonDisabledTextBrush}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- フォントとフォントサイズは各言語単位で指定してあります -->
    <Style x:Key="{x:Type Control}" TargetType="{x:Type Control}" BasedOn="{StaticResource BaseStyle}"/>

    <Style x:Key="{x:Type Window}" TargetType="{x:Type Window}" BasedOn="{StaticResource BaseStyle}"/>
    <Style x:Key="{x:Type UserControl}" TargetType="{x:Type UserControl}" BasedOn="{StaticResource BaseStyle}"/>
    <Style x:Key="{x:Type Button}" TargetType="{x:Type Button}" BasedOn="{StaticResource BaseButtonStyle}"/>
    <Style x:Key="{x:Type Label}" TargetType="{x:Type Label}" BasedOn="{StaticResource BaseStyle}"/>
    <Style x:Key="{x:Type TextBox}" TargetType="{x:Type TextBox}" BasedOn="{StaticResource BaseTextBoxStyle}"/>
    <Style x:Key="{x:Type ListView}" TargetType="{x:Type ListView}" BasedOn="{StaticResource BaseStyle}"/>
    <Style x:Key="{x:Type ComboBox}" TargetType="{x:Type ComboBox}" BasedOn="{StaticResource BaseComboStyle}"/>
    <Style x:Key="{x:Type RadioButton}" TargetType="{x:Type RadioButton}" BasedOn="{StaticResource BaseStyle}"/>
    <Style x:Key="{x:Type CheckBox}" TargetType="{x:Type CheckBox}" BasedOn="{StaticResource BaseStyle}"/>
    <!--<Style x:Key="{x:Type prism:DialogWindow}" TargetType="{x:Type prism:DialogWindow}" BasedOn="{StaticResource BaseStyle}"/>-->
    <!-- 足りないコントロールは随時追加する -->

    <!--<Style x:Key="ButtonFocus">
        <Setter Property="Control.Template">
            <Setter.Value>
                <ControlTemplate>
                    <Rectangle Margin="3" StrokeThickness="1" Stroke="LightGray" StrokeDashArray="1 2"/>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>-->

</ResourceDictionary>
