<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation" 
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:sys="clr-namespace:System;assembly=mscorlib">

    <!-- プレースホルダーテキストボックス時背景色 -->
    <SolidColorBrush x:Key="SerialBackground" Color="#FFBDFFC6" />
    
    <!-- 未入力時のデータ表示用 -->
    <VisualBrush x:Key="CueBannerBrush" AlignmentX="Center" AlignmentY="Center" Stretch="UniformToFill" AutoLayoutContent="False">
        <VisualBrush.Visual>
            <TextBlock Text="{DynamicResource S01-00-002}" 
                       Foreground="DarkGray" 
                       Background="{StaticResource SerialBackground}"
                       Padding="70"
                       FontSize="35"
                       HorizontalAlignment="Center" 
                       VerticalAlignment="Center"/>
        </VisualBrush.Visual>
    </VisualBrush>

    <!-- 未入力時表示テキストボックス -->
    <Style x:Key="MeasureTextStyle" TargetType="TextBox">
        <Setter Property="Background" Value="{StaticResource SerialBackground}" />
        <Setter Property="HorizontalContentAlignment" Value="Right"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="Padding" Value="0,0,10,0"/>
        <Style.Resources>
            <Style TargetType="{x:Type Border}">
                <Setter Property="CornerRadius" Value="15"/>
            </Style>
        </Style.Resources>
        <Style.Triggers>
            <Trigger Property="Text" Value="{x:Static sys:String.Empty}">
                <Setter Property="Background" Value="{StaticResource CueBannerBrush}" />
            </Trigger>
            <Trigger Property="Text" Value="{x:Null}">
                <Setter Property="Background" Value="{StaticResource CueBannerBrush}" />
            </Trigger>
            <Trigger Property="IsKeyboardFocused" Value="True">
                <Setter Property="Background" Value="{StaticResource SerialBackground}" />
            </Trigger>
            <!-- Validation がエラーを返した際にその内容をツールチップを表示するスタイル -->
            <Trigger Property="Validation.HasError" Value="true">
                <Setter Property="ToolTip"
                    Value="{Binding RelativeSource={x:Static RelativeSource.Self},
                    Path=(Validation.Errors)/ErrorContent}"/>
                <Setter Property="Background" Value="#FFCCFF"/>
            </Trigger>
        </Style.Triggers>
    </Style>
    
    <!--丸Button用スタイル-->
    <Style x:Key="circleButton" TargetType="Button" BasedOn="{StaticResource BaseButtonStyle}">
        <Setter Property="Height" Value="100"/>
        <Setter Property="Width" Value="100"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Grid SnapsToDevicePixels="true">
                        <Ellipse x:Name="Elipse" Stroke="{TemplateBinding Foreground}">
                            <Ellipse.Fill>
                                <RadialGradientBrush  GradientOrigin="0.25,0.25">
                                    <GradientStop Color="#FFB2FFB2" Offset="0"/>
                                    <GradientStop Color="#FF00E000" Offset="1"/>
                                </RadialGradientBrush>
                            </Ellipse.Fill>
                        </Ellipse>
                        <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center" />
                    </Grid>
                    <ControlTemplate.Triggers>
                        <!-- マウスオーバー時の色設定 -->
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter Property="Fill" TargetName="Elipse">
                                <Setter.Value>
                                    <RadialGradientBrush  GradientOrigin="0.25,0.25">
                                        <GradientStop Color="#FFF6FFF6" Offset="0"/>
                                        <GradientStop Color="Lime" Offset="1"/>
                                    </RadialGradientBrush>
                                </Setter.Value>
                            </Setter>
                            <Setter Property="Stroke" TargetName="Elipse" Value="White"/>
                        </Trigger>
                        <!-- マウスクリック時の設定-->
                        <Trigger Property="IsPressed" Value="True">
                            <Setter Property="Fill" TargetName="Elipse">
                                <Setter.Value>
                                    <RadialGradientBrush  GradientOrigin="0.25,0.25">
                                        <GradientStop Color="#FF00EC00" Offset="0"/>
                                        <GradientStop Color="#FF009300" Offset="1"/>
                                    </RadialGradientBrush>
                                </Setter.Value>
                            </Setter>
                            <Setter Property="Stroke" TargetName="Elipse" Value="Black"/>
                            <Setter Property="StrokeThickness" TargetName="Elipse" Value="2"/>
                            <Setter Property="Foreground" Value="White"/>
                        </Trigger>
                        <!-- 無効化時の色設定 -->
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Fill" TargetName="Elipse">
                                <Setter.Value>
                                    <RadialGradientBrush  GradientOrigin="0.25,0.25">
                                        <GradientStop Color="White" Offset="0"/>
                                        <GradientStop Color="#FFB6B6B6" Offset="1"/>
                                    </RadialGradientBrush>
                                </Setter.Value>
                            </Setter>
                            <Setter Property="Stroke" TargetName="Elipse" Value="Black"/>
                            <Setter Property="Foreground" Value="Gray"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

</ResourceDictionary>